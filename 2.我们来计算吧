下面的程序计算　０　到３６０度之间的　sin　函数值：

                /*   sine 函数表             
                    Michel Vallieres     
                    Written: Winter 1995    */

#include < stdio.h>
#include < math.h>

void main()
{
    int    angle_degree;
    double angle_radian, pi, value;

       /* 打印表头 */
    printf ("\nCompute a table of the sine function\n\n");

        /* 得到圆周率PI的值 */
        /*或者可以用pi = M_PI, 这个 M_PI 常量定义在头文件math.h中     */
    pi = 4.0*atan(1.0);
    printf ( " Value of PI = %f \n\n", pi );

    printf ( " angle     Sine \n" );

    angle_degree=0;            /* 初始化角度值为0   */

    /* scan over angle  */
    while (  angle_degree <= 360 )    /*  循环执行循环体（while程序块）直到angle_degree > 360 */
    {
       angle_radian = pi * angle_degree/180.0 ;
       value = sin(angle_radian);
       printf ( " %3d      %f \n ", angle_degree, value );

       angle_degree = angle_degree + 10;            /* 增量    */
    }
}

编译该程序：
　　　　
　　　gcc sine.c -lm
 执行该程序：　
　　　　. /a.out
说明：
 1)  /*  和 */ 之间的文字都属程序注释，不是程序语句，仅仅是为了说明这个程序，帮助自己对自己做的工作做一下注释或帮助别人理解程序的代码。

2） 变量的类型
    一个程序的数据分为变量和常量。其中主要是变量。每个变量必须说明其类型。其定义格式是：
    数据类型名  变量名;
    数据类型名  变量1名,变量2名,...变量k名;
    比如：
         int a;
         int b=3; /*也可以在定义变量时用一个初始化式（如这里的=3）给变量一个初始值*/
         int a=3,b,c=2;
     
   每个变量都具有一定的类型，类型规定了一个变量在内存里占用多大空间，也规定了对这种类型的变量能进行什么样的操作（运算），当然也规定了该类型变量的取值范围。C程序有下面的一些常用类型：
　　　　int    -> integer variable(整型变量，表示整数，一般占4个字节)
　　　　short  -> short integer (短整型，一般占2个字节)
　　　　long   -> long integer (长整型，一般占6或8个字节)
　　　　float  -> single precision real (floating point) variable(单精度实数（浮点类型），一般占4个字节)
　　　　double -> double precision real (floating point) variable (双精度实数（浮点类型），一般占8个字节)
　　　　char   -> character variable (single byte) (字符型（单字节)）

    可以看到，变量名是可以任意定义的，可以是一个字母或多个字母、数字、下划线等，但第一个字符只能是字母或下划线。如
      double Pi;
      float _angle;
      int 3angle; /*错，第一个字符不是字母或下划线*/
      int if; /*错：变量名不是是C语言本身的关键字，如if、int、include、return、...*/ 
    
    
    变量名要具有可读性，以方便阅读理解这个程序，有的编译器可能限制变量名的最大长度。

3)　printf 函数 可以打印 int, float ,即字符串等变量或常量。其函数格式大致如下：
　　　　　printf( "format", variables );

　其中"format"称为格式串，可包含下列三种字符类型：
   1）一般字符，将会直接输出
   2）ASCII 控制字符，如\t、\n 等有特定含义
   3）格式转换字符 . 如 %f 、%d. 定义后面输出项（variables）的类型，而variables则是一些要按照这格式输出的变量。如：

　　　%.nd    integer (可选的n说明输出整数数字占据的列数)
　　　%m.nf    float or double (可选的m = 占据的列数,
                   n = 精度的位数)
　　　%ns    string (可选的 n = 占据的列数s)
　　　%c        character(字符)
　　　\n \t     换行或制表符
　　　\g    终端上响铃


 4） 和printf向屏幕输出数据相对的是从键盘输入数据的scanf函数，它们都是C语言的标准库函数（即已经实现好的函数，我们只要调用就行）。例如：
      #include <stdio.h>   /* stdio.h 中定义了输出输出相关的函数 */
      void main(){
         int a; float b;
         scanf(“%d %f”, &a, &b); /* 从键盘输入一个整数和一个实数 */
         printf(“%d %f”, a, b);  /* 向屏幕输出一个整数和一个实数*/
      }

 
 
 
